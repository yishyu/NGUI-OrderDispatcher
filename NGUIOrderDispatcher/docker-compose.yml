version: '3.7'

services:
  web:
    build:
      context: ./
      dockerfile: Dockerfile
    command: gunicorn NGUIOrderDispatcher.wsgi:application --bind 0.0.0.0:8000 --timeout 300
    volumes:
      - static_volume:/srv/static
      - media_volume:/srv/media
    expose:
      - 8000
    env_file:
      - ./.env
    depends_on:
      - db
    networks:
      - private
    restart: unless-stopped

  db:
    image: postgres:12.0-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./.env.db
    networks:
      - private
    restart: unless-stopped

  nginx:
    build: ./nginx
    volumes:
      - static_volume:/home/app/web/static
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.web_orderdispatcher.entrypoints=http"
      - "traefik.http.routers.web_orderdispatcher.rule=Host(`orderdispatcher.chifuri.be`)"
      - "traefik.http.middlewares.web_orderdispatcher-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.web_orderdispatcher.middlewares=web_orderdispatcher-https-redirect"
      - "traefik.http.routers.web_orderdispatcher-secure.entrypoints=https"
      - "traefik.http.routers.web_orderdispatcher-secure.rule=Host(`orderdispatcher.chifuri.be`)"
      - "traefik.http.routers.web_orderdispatcher-secure.tls=true"
      - "traefik.http.routers.web_orderdispatcher-secure.tls.certresolver=http"
      - "traefik.http.routers.web_orderdispatcher-secure.service=nginx-orderdispatcher@docker"
      - "traefik.docker.network=traefik-proxy"
    depends_on:
      - web
    networks:
      - private
      - public
      - traefik-proxy
    restart: unless-stopped

networks:
  private:
    driver: overlay
  public:
    external: true
  traefik-proxy:
    external: true

volumes:
  postgres_data:
  static_volume: